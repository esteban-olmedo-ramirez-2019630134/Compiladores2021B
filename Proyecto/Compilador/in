Mete: public void GenerateAll(){ClearMap();width = 100;height = 100;sections = new List<Section>();	templates = new Dictionary<string, Template>();	CreateRulesAndTemplates();CreateMap();Generate();}


----------------LEYENDO: montain ------------

----------------LEYENDO: tierra ------------



Mete: spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true,


Mete: 0
Mete: 1
Mete: 0
Sacando: 0

Sacando: 1

Sacando: 0

Mete: {0,1,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,1,0}

Mete: {{0,1,0},{0,0,0},{0,0,0}}

Buscando: tierra, hash_val: 7861
Metiendo: tierra, hash_val: 7861
Buscando: tierra, hash_val: 7861
Sacando: {{0,1,0},{0,0,0},{0,0,0}}

Sacando: spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true,

Mete: new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

----------------LEYENDO: pasto ------------



Mete: spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true,


Mete: 0
Mete: 1
Mete: 0
Sacando: 0

Sacando: 1

Sacando: 0

Mete: {0,1,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,1,0}

Mete: {{0,1,0},{0,0,0},{0,0,0}}

Buscando: pasto, hash_val: 2598
Metiendo: pasto, hash_val: 2598
Buscando: pasto, hash_val: 2598
Sacando: {{0,1,0},{0,0,0},{0,0,0}}

Sacando: spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true,

Mete: new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Sacando: new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}
Sacando: new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Sacando: new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}
Buscando: montain, hash_val: 8858
Metiendo: montain, hash_val: 8858
Buscando: montain, hash_val: 8858
Sacando: new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);


----------------LEYENDO: nieve ------------

----------------LEYENDO: tierra_nieve ------------



Mete: spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false,


Mete: 0
Mete: 1
Mete: 0
Sacando: 0

Sacando: 1

Sacando: 0

Mete: {0,1,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,1,0}

Mete: {{0,1,0},{0,0,0},{0,0,0}}

Buscando: tierra_nieve, hash_val: 8114
Metiendo: tierra_nieve, hash_val: 8114
Buscando: tierra_nieve, hash_val: 8114
Sacando: {{0,1,0},{0,0,0},{0,0,0}}

Sacando: spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false,

Mete: new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

----------------LEYENDO: nievecita ------------



Mete: spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false,


Mete: 0
Mete: 1
Mete: 0
Sacando: 0

Sacando: 1

Sacando: 0

Mete: {0,1,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Mete: 0
Mete: 0
Mete: 0
Sacando: 0

Sacando: 0

Sacando: 0

Mete: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,0,0}

Sacando: {0,1,0}

Mete: {{0,1,0},{0,0,0},{0,0,0}}

Buscando: nievecita, hash_val: 2337
Metiendo: nievecita, hash_val: 2337
Buscando: nievecita, hash_val: 2337
Sacando: {{0,1,0},{0,0,0},{0,0,0}}

Sacando: spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false,

Mete: new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Sacando: new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}
Sacando: new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Sacando: new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}
Buscando: nieve, hash_val: 8672
Metiendo: nieve, hash_val: 8672
Buscando: nieve, hash_val: 8672
Sacando: new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}

Mete: List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);
Sacando: List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);

Sacando: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);


----------------LEYENDO: camino1 ------------

----------------LEYENDO: seed ------------
Mete: 3.141593F
Sacando: 3.141593F

Mete: seed = 3.141593F,

----------------LEYENDO: filler ------------
Mete: "nievenieve"
Buscando: nieve, hash_val: 8672
Sacando: "nievenieve"

Sacando: seed = 3.141593F,

Mete: seed = 3.141593F, filler = "nievenieve",

Buscando: camino1, hash_val: 4494
Metiendo: camino1, hash_val: 4494
Buscando: camino1, hash_val: 4494
Sacando: seed = 3.141593F, filler = "nievenieve",

Mete: templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};
Sacando: templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};

Sacando: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};


----------------LEYENDO: camino2 ------------

----------------LEYENDO: minSectionWidth ------------
Mete: 5
Sacando: 5

Mete: minSectionWidth = 5,

----------------LEYENDO: seed ------------
Mete: 324.345250F
Sacando: 324.345250F

Sacando: minSectionWidth = 5,

Mete: minSectionWidth = 5, seed = 324.345250F,

----------------LEYENDO: filler ------------
Mete: "montainmontain"
Buscando: montain, hash_val: 8858
Sacando: "montainmontain"

Sacando: minSectionWidth = 5, seed = 324.345250F,

Mete: minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain",

Buscando: camino2, hash_val: 1620
Metiendo: camino2, hash_val: 1620
Buscando: camino2, hash_val: 1620
Sacando: minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain",

Mete: templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};
Sacando: templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};

Sacando: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};


----------------LEYENDO: cueva1 ------------

----------------LEYENDO: seed ------------
Mete: 234.523450F
Sacando: 234.523450F

Mete: seed = 234.523450F,

----------------LEYENDO: fillPercent ------------
Mete: 35
Sacando: 35

Sacando: seed = 234.523450F,

Mete: seed = 234.523450F, fillPercent = 35,

----------------LEYENDO: edgeAreWalls ------------
Mete: true
Sacando: true

Sacando: seed = 234.523450F, fillPercent = 35,

Mete: seed = 234.523450F, fillPercent = 35, edgeAreWalls = true,

----------------LEYENDO: filler ------------
Mete: "nievenieve"
Buscando: nieve, hash_val: 8672
Sacando: "nievenieve"

Sacando: seed = 234.523450F, fillPercent = 35, edgeAreWalls = true,

Mete: seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve",

Buscando: cueva1, hash_val: 4317
Metiendo: cueva1, hash_val: 4317
Buscando: cueva1, hash_val: 4317
Sacando: seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve",

Mete: templates["cueva1"] = new Template {seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve", algorithm = "MooreCellularAutomata"};
Sacando: templates["cueva1"] = new Template {seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve", algorithm = "MooreCellularAutomata"};

Sacando: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};templates["cueva1"] = new Template {seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve", algorithm = "MooreCellularAutomata"};


----------------LEYENDO: cueva2 ------------

----------------LEYENDO: seed ------------
Mete: 244.524534F
Sacando: 244.524534F

Mete: seed = 244.524534F,

----------------LEYENDO: fillPercent ------------
Mete: 30
Sacando: 30

Sacando: seed = 244.524534F,

Mete: seed = 244.524534F, fillPercent = 30,

----------------LEYENDO: edgeAreWalls ------------
Mete: true
Sacando: true

Sacando: seed = 244.524534F, fillPercent = 30,

Mete: seed = 244.524534F, fillPercent = 30, edgeAreWalls = true,

----------------LEYENDO: filler ------------
Mete: "montainmontain"
Buscando: montain, hash_val: 8858
Sacando: "montainmontain"

Sacando: seed = 244.524534F, fillPercent = 30, edgeAreWalls = true,

Mete: seed = 244.524534F, fillPercent = 30, edgeAreWalls = true, filler = "montainmontain",

Buscando: cueva2, hash_val: 716
Metiendo: cueva2, hash_val: 716
Buscando: cueva2, hash_val: 716
Sacando: seed = 244.524534F, fillPercent = 30, edgeAreWalls = true, filler = "montainmontain",

Mete: templates["cueva2"] = new Template {seed = 244.524534F, fillPercent = 30, edgeAreWalls = true, filler = "montainmontain", algorithm = "VonNeumannCellularAutomata"};
Sacando: templates["cueva2"] = new Template {seed = 244.524534F, fillPercent = 30, edgeAreWalls = true, filler = "montainmontain", algorithm = "VonNeumannCellularAutomata"};

Sacando: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};templates["cueva1"] = new Template {seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve", algorithm = "MooreCellularAutomata"};

Mete: List<Rule> montain = new List<Rule>(){new Rule{spritePath="ground_middle", spriteMultiplePath="Mountain/Tileset",isDefault=true,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="grass", spriteMultiplePath="Mountain/Tileset",isDefault=false,isMultipleSprite=true, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("montain",montain);List<Rule> nieve = new List<Rule>(){new Rule{spritePath="Mountain/tierra_nieve", spriteMultiplePath="",isDefault=true,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}, new Rule{spritePath="Mountain/nieve", spriteMultiplePath="",isDefault=false,isMultipleSprite=false, matrixOfNeighbors=new int[,] {{0,1,0},{0,0,0},{0,0,0}}}};
RuleTileGenerator.CreateRuleTile("nieve",nieve);templates["camino1"] = new Template {seed = 3.141593F, filler = "nievenieve", algorithm = "RandomWalk"};templates["camino2"] = new Template {minSectionWidth = 5, seed = 324.345250F, filler = "montainmontain", algorithm = "RandomWalkSmoothed"};templates["cueva1"] = new Template {seed = 234.523450F, fillPercent = 35, edgeAreWalls = true, filler = "nievenieve", algorithm = "MooreCellularAutomata"};templates["cueva2"] = new Template {seed = 244.524534F, fillPercent = 30, edgeAreWalls = true, filler = "montainmontain", algorithm = "VonNeumannCellularAutomata"};



Buscando: sections, hash_val: 5739
Metiendo: sections, hash_val: 5739
Buscando: sections, hash_val: 5739
Mete: sections = new List<Section> (); for(int i = 0; i < 16; i++) { sections.Add(new Section {width = width, height = height, id = i, neighbors = new int[4]{-1,-1,-1,-1}});}
Sacando: sections = new List<Section> (); for(int i = 0; i < 16; i++) { sections.Add(new Section {width = width, height = height, id = i, neighbors = new int[4]{-1,-1,-1,-1}});}

Mete: sections = new List<Section> (); for(int i = 0; i < 16; i++) { sections.Add(new Section {width = width, height = height, id = i, neighbors = new int[4]{-1,-1,-1,-1}});}

Mete: int
----------------LEYENDO: i ------------
Mete: i
Mete: 0
Buscando: i, hash_val: 105
Metiendo: i, hash_val: 105
Buscando: i, hash_val: 105
Sacando: 0

Sacando: i

Sacando: int

Mete: int i = 0;
Sacando: int i = 0;

Mete: int i = 0;

----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
Mete: <
Mete: 8
Sacando: 8

Sacando: <

Sacando: i

Mete: i<8

-----------LEE IF ------------
----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
Mete: <
Mete: 7
Sacando: 7

Sacando: <

Sacando: i

Mete: i<7

----------LEE JOIN-----------
----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
Mete: 1
Sacando: 1

Sacando: i

Mete: i+1
Sacando: i+1

Sacando: i

Mete: sections[i].neighbors[2] = sections[i+1].id;

Sacando: sections[i].neighbors[2] = sections[i+1].id;

Sacando: i<7

Mete: if(i<7){sections[i].neighbors[2] = sections[i+1].id;}

-----------LEE IF ------------
----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
Mete: <
Mete: 4
Sacando: 4

Sacando: <

Sacando: i

Mete: i<4

----------------LEYENDO: i ------------
Mete: i
Buscando: i, hash_val: 105
----------------LEYENDO: camino1 ------------
Mete: camino1
Buscando: camino1, hash_val: 4494
Sacando: camino1

Sacando: i

Mete: i.Init(templates["camino1"])
Sacando: i.Init(templates["camino1"])

Mete: i.Init(templates["camino1"]);

Sacando: i.Init(templates["camino1"]);

Sacando: i<4

Mete: if(i<4){i.Init(templates["camino1"]);}

----------------LEYENDO: i ------------
Mete: i
LEEE PLUSPLUS
Aqui nomas
Buscando: i, hash_val: 105
Sacando: i

Mete: i++
Sacando: i++

Mete: i++;

Sacando: i++;

Sacando: if(i<4){i.Init(templates["camino1"]);}

Mete: if(i<4){i.Init(templates["camino1"]);}i++;
Sacando: if(i<4){i.Init(templates["camino1"]);}i++;

Sacando: if(i<7){sections[i].neighbors[2] = sections[i+1].id;}

Mete: if(i<7){sections[i].neighbors[2] = sections[i+1].id;}if(i<4){i.Init(templates["camino1"]);}i++;
Sacando: if(i<7){sections[i].neighbors[2] = sections[i+1].id;}if(i<4){i.Init(templates["camino1"]);}i++;

Sacando: i<8

Mete: while(i<8){if(i<7){sections[i].neighbors[2] = sections[i+1].id;}if(i<4){i.Init(templates["camino1"]);}i++;}

syntax error
